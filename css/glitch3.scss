@function rand($min, $max) {
  @return random() * ($max - $min) + $min;
}

$animation-duration: 3s; // 何秒おきにアニメーションをループするか
$glitch-duration: 30%; // 動き自体の長さ、上記秒数に対するパーセンテージ
$glitch-frequency: 20; // 動きの頻度
$glitch-interval: $glitch-duration / $glitch-frequency;

@mixin text-glitch1 {
  @keyframes test-anime1 {
    @for $i from 0 to $glitch-frequency {
      $top: rand(1, 50) * 1%;
      $bottom: rand(1, 50) * 1%;
      $horizontal: rand(1, 5) * 1%;

      #{$i * $glitch-interval} {
        clip-path: inset($top $horizontal $bottom);
      }
      #{$glitch-duration},
      100% {
        clip-path: none;
      }
    }
  }
  animation: test-anime1 $animation-duration linear infinite;
}
@mixin text-glitch2 {
  @keyframes test-anime2 {
    @for $i from 0 to $glitch-frequency {
      $top: rand(1, 40) * 1%;
      $bottom: rand(1, 20) * 1%;
      $horizontal: rand(1, 10) * 1%;

      #{$i * $glitch-interval} {
        clip-path: inset($top $horizontal $bottom);
      }
      #{$glitch-duration},
      100% {
        clip-path: none;
      }
    }
  }

  animation: test-anime2 $animation-duration linear infinite;
}

.glitch3 {
  background-color: #000;
  height: 50vh;
  width: 100%;
  display: flex;
  justify-content: center;
  align-items: center;
  .glitch-text {
    position: relative;
    color: #fff;
    font-weight: 700;
    font-size: 80px;
    text-transform: uppercase;
    padding: 0 20px;
    @media screen and (max-width: 768px) {
      font-size: 10vw;
    }
    &::before,
    &::after {
      content: attr(data-text);
      position: absolute;
      width: 100%;
      height: 100%;
      top: 0;
      left: 0;
      padding: 0 20px;
      color: #fff;
      overflow: hidden;
      background-color: #000;
    }
    &::before {
      left: 3px;
      text-shadow: 2px 0 red;
      @include text-glitch2;
    }
    &::after {
      left: -3px;
      @include text-glitch1;
      text-shadow: -2px 0 blue;
    }
  }
}
